{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAUC,SAASC,cAAc,SACvCF,EAAQG,iBAAiB,UAGzB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOP,EAAQQ,SAASC,MAAMC,OACzCC,EAAYJ,OAAOP,EAAQQ,SAASI,KAAKF,OACzCG,EAASN,OAAOP,EAAQQ,SAASK,OAAOH,OAC1CI,EAAkB,EACtBC,EAAUC,aAAY,WAqBxB,IAAuBC,EAAUR,GAAVQ,EApBnBH,GAAmB,EAoBUL,EAnBEH,EAoB1B,IAAIY,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUR,UAEpBW,EAAO,CAAEH,WAAUR,YAEpBA,OA3BAgB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUR,EAAKiB,EAALjB,MACjBkB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfb,EAAS,QAAYa,OAANrB,EAAM,UAGjDsB,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUR,EAAKiB,EAALjB,MAClBkB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAfb,EAAS,QAAYa,OAANrB,EAAM,UAGjDH,GAAcK,IACbA,GACHa,YAAW,WACTS,cAAclB,KACbF,EAASF,EAAYL,GACxBF,EAAE8B,cAAcC,WA3BlB,IAAIpB,EAAU,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmit);\nlet timerId = null;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let firstDelay = Number(formRef.elements.delay.value);\n  const delayStep = Number(formRef.elements.step.value);\n  const amount = Number(formRef.elements.amount.value);\n  let promisePosition = 0;\n  timerId = setInterval(() => {\n    promisePosition += 1;\n    createPromise(promisePosition, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += delayStep;\n  }, delayStep);\n  setTimeout(() => {\n    clearInterval(timerId);\n  }, amount * delayStep + firstDelay);\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","elements","delay","value","delayStep","step","amount","promisePosition","$ce04d3a99e08e73b$var$timerId","setInterval","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","clearInterval","currentTarget","reset"],"version":3,"file":"03-promises.334053f2.js.map"}